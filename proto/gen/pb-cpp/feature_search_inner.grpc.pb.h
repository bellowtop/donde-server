// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: feature_search_inner.proto
#ifndef GRPC_feature_5fsearch_5finner_2eproto__INCLUDED
#define GRPC_feature_5fsearch_5finner_2eproto__INCLUDED

#include "feature_search_inner.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace com {
namespace sekirocc {
namespace feature_search {
namespace inner {

// feature search service
class FeatureSearch final {
 public:
  static constexpr char const* service_full_name() {
    return "com.sekirocc.feature_search.inner.FeatureSearch";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>> AsyncTrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>>(AsyncTrainIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>> PrepareAsyncTrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>>(PrepareAsyncTrainIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>> AsyncAddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>>(AsyncAddFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>> PrepareAsyncAddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>>(PrepareAsyncAddFeatureRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>> AsyncDeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>>(AsyncDeleteFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>> PrepareAsyncDeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>>(PrepareAsyncDeleteFeatureRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>> AsyncSearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>>(AsyncSearchFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>> PrepareAsyncSearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>>(PrepareAsyncSearchFeatureRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>* AsyncTrainIndexRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::TrainIndexResponse>* PrepareAsyncTrainIndexRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>* AsyncAddFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::AddFeatureResponse>* PrepareAsyncAddFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* AsyncDeleteFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* PrepareAsyncDeleteFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* AsyncSearchFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* PrepareAsyncSearchFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>> AsyncTrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>>(AsyncTrainIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>> PrepareAsyncTrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>>(PrepareAsyncTrainIndexRaw(context, request, cq));
    }
    ::grpc::Status AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>> AsyncAddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>>(AsyncAddFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>> PrepareAsyncAddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>>(PrepareAsyncAddFeatureRaw(context, request, cq));
    }
    ::grpc::Status DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>> AsyncDeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>>(AsyncDeleteFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>> PrepareAsyncDeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>>(PrepareAsyncDeleteFeatureRaw(context, request, cq));
    }
    ::grpc::Status SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>> AsyncSearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>>(AsyncSearchFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>> PrepareAsyncSearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>>(PrepareAsyncSearchFeatureRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void TrainIndex(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response, std::function<void(::grpc::Status)>) override;
      void AddFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchFeature(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>* AsyncTrainIndexRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::TrainIndexResponse>* PrepareAsyncTrainIndexRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>* AsyncAddFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::AddFeatureResponse>* PrepareAsyncAddFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* AsyncDeleteFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* PrepareAsyncDeleteFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* AsyncSearchFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* PrepareAsyncSearchFeatureRaw(::grpc::ClientContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_TrainIndex_;
    const ::grpc::internal::RpcMethod rpcmethod_AddFeature_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteFeature_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchFeature_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status TrainIndex(::grpc::ServerContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response);
    virtual ::grpc::Status AddFeature(::grpc::ServerContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response);
    virtual ::grpc::Status DeleteFeature(::grpc::ServerContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response);
    virtual ::grpc::Status SearchFeature(::grpc::ServerContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TrainIndex() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTrainIndex(::grpc::ServerContext* context, ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::grpc::ServerAsyncResponseWriter< ::com::sekirocc::feature_search::inner::TrainIndexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddFeature() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddFeature(::grpc::ServerContext* context, ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::grpc::ServerAsyncResponseWriter< ::com::sekirocc::feature_search::inner::AddFeatureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFeature(::grpc::ServerContext* context, ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::grpc::ServerAsyncResponseWriter< ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchFeature() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchFeature(::grpc::ServerContext* context, ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::grpc::ServerAsyncResponseWriter< ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_TrainIndex<WithAsyncMethod_AddFeature<WithAsyncMethod_DeleteFeature<WithAsyncMethod_SearchFeature<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TrainIndex() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::TrainIndexRequest, ::com::sekirocc::feature_search::inner::TrainIndexResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* request, ::com::sekirocc::feature_search::inner::TrainIndexResponse* response) { return this->TrainIndex(context, request, response); }));}
    void SetMessageAllocatorFor_TrainIndex(
        ::grpc::MessageAllocator< ::com::sekirocc::feature_search::inner::TrainIndexRequest, ::com::sekirocc::feature_search::inner::TrainIndexResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::TrainIndexRequest, ::com::sekirocc::feature_search::inner::TrainIndexResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TrainIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddFeature() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::AddFeatureRequest, ::com::sekirocc::feature_search::inner::AddFeatureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* request, ::com::sekirocc::feature_search::inner::AddFeatureResponse* response) { return this->AddFeature(context, request, response); }));}
    void SetMessageAllocatorFor_AddFeature(
        ::grpc::MessageAllocator< ::com::sekirocc::feature_search::inner::AddFeatureRequest, ::com::sekirocc::feature_search::inner::AddFeatureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::AddFeatureRequest, ::com::sekirocc::feature_search::inner::AddFeatureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::DeleteFeatureRequest, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* request, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* response) { return this->DeleteFeature(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteFeature(
        ::grpc::MessageAllocator< ::com::sekirocc::feature_search::inner::DeleteFeatureRequest, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::DeleteFeatureRequest, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchFeature() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::SearchFeatureRequest, ::com::sekirocc::feature_search::inner::SearchFeatureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* request, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* response) { return this->SearchFeature(context, request, response); }));}
    void SetMessageAllocatorFor_SearchFeature(
        ::grpc::MessageAllocator< ::com::sekirocc::feature_search::inner::SearchFeatureRequest, ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::com::sekirocc::feature_search::inner::SearchFeatureRequest, ::com::sekirocc::feature_search::inner::SearchFeatureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_TrainIndex<WithCallbackMethod_AddFeature<WithCallbackMethod_DeleteFeature<WithCallbackMethod_SearchFeature<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TrainIndex() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddFeature() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchFeature() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TrainIndex() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTrainIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddFeature() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddFeature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFeature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchFeature() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchFeature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TrainIndex() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TrainIndex(context, request, response); }));
    }
    ~WithRawCallbackMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TrainIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddFeature() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddFeature(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteFeature(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchFeature() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchFeature(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TrainIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TrainIndex() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::com::sekirocc::feature_search::inner::TrainIndexRequest, ::com::sekirocc::feature_search::inner::TrainIndexResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::com::sekirocc::feature_search::inner::TrainIndexRequest, ::com::sekirocc::feature_search::inner::TrainIndexResponse>* streamer) {
                       return this->StreamedTrainIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TrainIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TrainIndex(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::TrainIndexRequest* /*request*/, ::com::sekirocc::feature_search::inner::TrainIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTrainIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::com::sekirocc::feature_search::inner::TrainIndexRequest,::com::sekirocc::feature_search::inner::TrainIndexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddFeature() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::com::sekirocc::feature_search::inner::AddFeatureRequest, ::com::sekirocc::feature_search::inner::AddFeatureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::com::sekirocc::feature_search::inner::AddFeatureRequest, ::com::sekirocc::feature_search::inner::AddFeatureResponse>* streamer) {
                       return this->StreamedAddFeature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::AddFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::AddFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddFeature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::com::sekirocc::feature_search::inner::AddFeatureRequest,::com::sekirocc::feature_search::inner::AddFeatureResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteFeature() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::com::sekirocc::feature_search::inner::DeleteFeatureRequest, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::com::sekirocc::feature_search::inner::DeleteFeatureRequest, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* streamer) {
                       return this->StreamedDeleteFeature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::DeleteFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::DeleteFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteFeature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::com::sekirocc::feature_search::inner::DeleteFeatureRequest,::com::sekirocc::feature_search::inner::DeleteFeatureResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchFeature() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::com::sekirocc::feature_search::inner::SearchFeatureRequest, ::com::sekirocc::feature_search::inner::SearchFeatureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::com::sekirocc::feature_search::inner::SearchFeatureRequest, ::com::sekirocc::feature_search::inner::SearchFeatureResponse>* streamer) {
                       return this->StreamedSearchFeature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchFeature(::grpc::ServerContext* /*context*/, const ::com::sekirocc::feature_search::inner::SearchFeatureRequest* /*request*/, ::com::sekirocc::feature_search::inner::SearchFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchFeature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::com::sekirocc::feature_search::inner::SearchFeatureRequest,::com::sekirocc::feature_search::inner::SearchFeatureResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_TrainIndex<WithStreamedUnaryMethod_AddFeature<WithStreamedUnaryMethod_DeleteFeature<WithStreamedUnaryMethod_SearchFeature<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_TrainIndex<WithStreamedUnaryMethod_AddFeature<WithStreamedUnaryMethod_DeleteFeature<WithStreamedUnaryMethod_SearchFeature<Service > > > > StreamedService;
};

}  // namespace inner
}  // namespace feature_search
}  // namespace sekirocc
}  // namespace com


#endif  // GRPC_feature_5fsearch_5finner_2eproto__INCLUDED
